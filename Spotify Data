--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--Then I inserted the Spotify Data .csv into the table.


--The following analysis was completed on the Spotify dataset.

--What are the top 10 most popular songs according to the data?

SELECT track_name
, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

--Who are top 10 most popular artists according to the data?

SELECT artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;

--What is the average damceability, energy, and tempo of each artist?

SELECT artist_name
, ROUND (AVG(danceability),3) AS avg_danceability
, ROUND (AVG(energy),3) AS avg_energy
, ROUND (AVG(tempo),3) AS avg_tempo
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--What is the average length of each artist's songs?

SELECT artist_name
, ROUND (AVG(duration_ms)) as avg_duration_ms
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--What is the average danceability and duration of the top 10 most popular songs?

SELECT artist_name
, track_name
, danceability
, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

--What are the average tempos and durations for the top 10 most popular artists?

SELECT artist_name
, ROUND (AVG(tempo)) as avg_tempo
, ROUND (AVG(duration_ms)) as avg_duration_ms
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;
